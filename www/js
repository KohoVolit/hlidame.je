/* requires D3 + https://github.com/Caged/d3-tip */
d3.timelineplot = function() {
    //defaults
    ticksnumber = 3;
    pointcolor = "red";
    function scatterplotwithlineplot(selection) {
        selection.each(function(d, i) {
            //options
            var data = (typeof(data) === "function" ? data(d) : d.data),
            margin = (typeof(margin) === "function" ? margin(d) : d.margin),
            minmaxdate = (typeof(minmaxdate) === "function" ? minmaxdate(d) : d.minmaxdate),
            ticksnumber_val = (typeof(ticksnumber) === "function" ? ticksnumber(d) : d.ticksnumber),
            pointcolor_val = (typeof(pointcolor) === "function" ? pointcolor(d) : d.pointcolor)
            ;
            
            // chart sizes
            var width = size['width'] - margin.left - margin.right,
                height = size['height'] - margin.top - margin.bottom;
            
            // define the x scale (horizontal)
            var mindate = minmaxdate['min'],
                maxdate = minmaxdate['max'];
               
            //set up scales
            var xScale = d3.time.scale()
			             .domain([mindate, maxdate])
			             .range([0, width]);
			var yScale = d3.scale.linear()
			             .domain([0, 1])
			             .range([height, 0]);
			 
			 //set up axis
			 var xAxis = d3.svg.axis().scale(xScale);
			 
			 // define element
			 var element = d3.select(this);
			 
			 var svg = element.append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
              .append("g")
                .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
			  // 2 x axes
			  svg.append("g")
                  .attr("class", "x-axis axis") 
                  .attr("transform", "translate(0," + height + ")")
                  .call(xAxis
                    //.orient("bottom")
                    .ticks(ticksnumber_val)
                    //.tickValues([new Date(2013,0,1)])
                  ); 
              svg.append("g")
                  .attr("class", "x axis") 
                  //.attr("transform", "translate(0," + height + ")")
                  .call(xAxis
                    .ticks(0)
                    .tickValues([])
                  ); 
              
              //create points
              svg.selectAll(".rectangle")
                    .data(data)
                        .enter()
                    .append("rect")
                        .attr("x", function(d,i) {
                            return xScale(d);
                        })
                        .attr("y", function(d,i) {
                            return yScale(1);
                        })
                        .attr("width", 1)
                        .attr("height",function() {
                            return yScale(0) - yScale(1);
                        })
                        .attr("fill", pointcolor_val)
                        .attr("fill-opacity", 1);        
			             
        }
    }
}
